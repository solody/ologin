<?php
/**
 * @file
 * Main file for oLogin module.
 */

/**
 * Implements hook_menu().
 */
function ologin_menu() {

  $items = array();

  // Wechat QR login.
  $items['ologin/weixin'] = array(
    'title' => 'Wechat login',
    'page callback' => 'ologin_weixin_page',
    'page arguments' => array('qr'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Wechat login callback.
  $items['ologin/weixin/callback'] = array(
    'title' => 'Wechat login',
    'page callback' => 'ologin_weixin_callback_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // 新增一个页面，用于显示邮件地址输入表单
  $items['ologin/weixin/bind-mail'] = array(
    'title' => 'Wechat login',
    'page callback' => 'ologin_mail_bind_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  // Configure page.
  $items['admin/config/system/ologin'] = array(
    'title' => 'oLogin',
    'page callback' => 'ologin_config_page',
    'access callback' => 'user_access',
    'access arguments' => array('administer ologin'),
  );

  return $items;
}


/**
 * Implements hook_user_delete().
 */
function ologin_user_delete($account) {
  db_delete('ologin')
    ->condition('uid', $account->uid)
    ->execute();
}


/**
 * Get Weixin auth url.
 */
function ologin_get_weixin_auth_url($type = NULL) {

  if ($type == 'qr') {
    // @see https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&t=resource/res_list&verify=1&id=open1419316505&token=cff71774ff7450fbcdc6f57b95307970c2702025&lang=zh_CN
    $url = url('https://open.weixin.qq.com/connect/qrconnect', array('query' => array(
              'appid'         => variable_get('ologin_weixin_appkey', ''),
              'redirect_uri'  => variable_get('ologin_weixin_callback', ''),
              'response_type' => 'code',
              'scope'         => 'snsapi_login',
            )));
  }

  return $url;
}


/**
 * Log callback error.
 */
function ologin_error($error_code = 0, $error = '', $function = NULL) {

  $message = 'Error in function @function, error code: @error_code, error message: @error';
  $vars = array(
    '@function'   => $function . '()',
    '@error_code' => $error_code,
    '@error'      => $error,
  );
  watchdog('oLogin', $message, $vars, WATCHDOG_ERROR);

}


/**
 * oLogin Weixin auth page.
 */
function ologin_weixin_page($type = NULL) {
  $url = ologin_get_weixin_auth_url('qr');
  drupal_goto($url);
}


/**
 * oLogin Weixin callback page.
 */
function ologin_weixin_callback_page($type = 'qr') {

  // 获取 access_token
  $access_token = ologin_get_access_token($_GET['code']);

  if (isset($access_token['errcode'])) {
    // 获取 access_token 失败
    drupal_set_message($access_token['errcode'] . ': ' . $access_token['errmsg'], 'error');
    return 'Wechat connect fails.';
  } else {

    // 获取 openid 和 昵称
    $userinfo = ologin_get_userinfo($access_token);

    if (isset($access_token['errcode'])) {
      // 获取 openid 和 昵称 失败
      drupal_set_message($access_token['errcode'] . ': ' . $access_token['errmsg'], 'error');
      return 'Wechat connect fails.';
    } else {

      // 保存到数据库
      $ologin_connection = ologin_set_record('weixin', $userinfo['openid'], $userinfo['nickname'], $userinfo['headimgurl']);

      if (!empty($ologin_connection['uid'])) {
        // 已经注册过，直接登录
        ologin_login($ologin_connection['uid']);
      } else {
        // 跳到邮件地址绑定表单，绑定已有账号或创建新账号
        drupal_session_start();
        $_SESSION['wechat_connection'] = $ologin_connection['id'];
        drupal_goto('ologin/weixin/bind-mail');
      }
    }
  }
}

/**
 * 邮件地址绑定页面，使用 ologin_bind_email_form() 定义的表单
 */
function ologin_mail_bind_page() {
  drupal_session_start();
  $connection = isset($_SESSION['wechat_connection']) ? $_SESSION['wechat_connection'] : null;
  $ologin_connection = ologin_get_connection($connection);

  if ($ologin_connection) {
    $form = drupal_get_form('ologin_bind_email_form', $ologin_connection);
    $form_output = drupal_render($form);
    return $form_output;
  } else {
    return 'Access error!';
  }
}


/**
 * 用 code 换取 access_token
 * @param $code
 * @return array $access_token
 */
function ologin_get_access_token($code) {

  $appid  = variable_get('ologin_weixin_appkey', '');
  $secret = variable_get('ologin_weixin_appsecret', '');

  $path = url('https://api.weixin.qq.com/sns/oauth2/access_token', array('query' => array(
    'appid'         => $appid,
    'secret'        => $secret,
    'grant_type'    => 'authorization_code',
    'code'          => $code,
  )));

  // Get Access Token
  $options = array('method' => 'POST');
  $request = drupal_http_request($path, $options);
  return drupal_json_decode($request->data);
}

/**
 * 用 access_token 获取用户信息
 * @param $access_token
 * @return array $userinfo
 */
function ologin_get_userinfo($access_token) {

  $path = url('https://api.weixin.qq.com/sns/userinfo', array('query' => array(
    'access_token'  => $access_token['access_token'],
    'openid'        => $access_token['openid'],
  )));

  // Get Access Token
  $options = array('method' => 'GET');
  $request = drupal_http_request($path, $options);
  return drupal_json_decode($request->data);
}


/**
 *  创建一个表单，使用户可以在扫码成功后，可以输入电子邮件
 */
function ologin_bind_email_form($form, &$form_state) {

  $connection = reset($form_state['build_info']['args']);

  if (!is_array($connection) && !empty($connection['uid'])) {
    $msg = t('Error access');
    drupal_set_message($msg, 'error');
    $form['msg'] = array('#markup' => $msg);
  } else {
    $form['opicture'] = array(
      '#markup' => '<img class="opicture" src="'.$connection['opicture'].'">'
    );
    $form['oname'] = array(
      '#markup' => '<h4 class="oname">'.$connection['oname'].'</h4>'
    );

    // 输入邮件地址
    $form['mail'] = array(
      '#title' => t('Email address'),
      '#type' => 'textfield',
      '#description' => t('If you already have an account, enter email to bind with this third-part account.'),
      '#required' => false,
    );

    $form['pass'] = array(
      '#title' => t('Password'),
      '#type' => 'password',
      '#description' => t('Please enter your password to verify your account.'),
      '#required' => false,
    );

    $form['register'] = array(
      '#type' => 'link',
      '#title' => t("I don't have an account yet"),
      '#href' => '/user/register',
      '#attributes' => array(
        'target' => '_blank'
      ),
      '#theme_wrappers' => array('container')
    );

    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Go on login'),
      '#validate' => array('ologin_bind_email_form_validate'),
      '#submit' => array('ologin_bind_email_form_submit'),

    );
  }

  return $form;
}

/**
 * 表单验证过程，执行用户绑定或创建
 */
function ologin_bind_email_form_validate($form, &$form_state) {
  $connection = ologin_get_connection($_SESSION['wechat_connection']);

  // 如果填写了邮件，查找用户，绑定到 connection
  // 如果没有填写，创建新用户
  $user = null;
  $mail_input = filter_var($form_state['values']['mail'], FILTER_VALIDATE_EMAIL);
  $pass_input = $form_state['values']['pass'];
  if (!empty($form_state['values']['mail'])) {

    if ($mail_input) {
      $user = user_load_by_mail($mail_input);
    } else {
      $user = user_load_by_name($form_state['values']['mail']);
    }
    if ($user) {
      require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
      $pass = user_check_password($pass_input, $user);
      if (!$pass) {
        form_set_error('pass', t("Account verify fail for @account.", array('account' => $form_state['values']['mail'])));
      }
    } else {
      form_set_error('mail', t("Account @account not register yet.", array('account' => $form_state['values']['mail'])));
    }
  } else {
    // 创建新用户
    $userinfo = array(
      'name' => ologin_get_unique_username($connection['oname']),
      'pass' => user_password(),
      'init' => $mail_input ? $mail_input : 'wechat_'.$connection['ouid'],
      'status' => 1,
      'access' => REQUEST_TIME,
    );
    // Save a new user.
    $user = user_save(drupal_anonymous_user(), $userinfo);

    // Terminate if an error occurred during user_save().
    if (!$user) {
      form_set_error('mail', t("Error saving user account."));
    }
  }

  if ($user) {
    ologin_bind_drupal_user($connection['id'], $user->uid);
    $form_state['user'] = $user;
  }
}

/**
 * 验证过程完成，登录用户
 */
function ologin_bind_email_form_submit($form, &$form_state) {
  if (isset($_SESSION['wechat_connection'])) unset($_SESSION['wechat_connection']);
  // 登录
  ologin_login($form_state['user']->uid);
}





/**
 * oLogin login.
 */
function ologin_login($uid) {
  // Check user account if is blocked.
  $is_blocked = db_select('users')
    ->fields('users', array('uid'))
    ->condition('uid', $uid)
    ->condition('status', 0)
    ->execute()->fetchObject();

  if ($is_blocked) {
    drupal_set_message('This account is not activated or has been blocked, ' . l(t('Back'), '<front>'), 'error');
  }
  else {
    // Load user object and process login action.
    global $user;
    $user = user_load($uid);
    $form_state['uid'] = $uid;
    user_login_finalize($form_state);
    //drupal_goto('user/' . $uid);
    drupal_goto('<front>');
  }
}



/**
 * Generate unique username.
 */
function ologin_get_unique_username($seed_name, $name = NULL, $i = 1) {

  // Set $seed_name as default name.
  if (empty($name)) {
    $name = $seed_name;
  }

  // Check username.
  if (ologin_username_exist($name)) {
    // Add suffix if username exists.
    $name = $seed_name . '_' . $i . rand(0, 9);
    $i++;
    // Continue check if new name exists.
    $name = ologin_get_unique_username($seed_name, $name, $i);
  }

  // Return non-exists username.
  return $name;
}


/**
 * Check if a username exists.
 */
function ologin_username_exist($name) {
  $query = 'SELECT uid FROM {users} WHERE name = :name';
  $result = db_query($query, array(':name' => $name));
  return $result->rowCount() > 0 ? TRUE : FALSE;
}


/**
 * Add or update new oLogin record, then return it.
 */
function ologin_set_record($type, $ouid, $oname, $opicture, $data = NULL) {

  // Check bind.
  $query = "SELECT * FROM {ologin} WHERE type = :type AND ouid = :ouid";
  $result = db_query($query, array(':type' => $type, ':ouid' => $ouid));
  $exist = (boolean)$result->rowCount();

  if ($exist) {
    db_update('ologin')
      ->fields(array('oname' => $oname))
      ->fields(array('opicture' => $opicture))
      ->condition('type', $type)
      ->condition('ouid', $ouid)
      ->execute();
  } else {
    db_insert('ologin')
      ->fields(array(
        'type' => $type,
        'ouid' => $ouid,
        'oname' => $oname,
        'opicture' => $opicture,
      ))
      ->execute();
  }

  $result = db_query($query, array(':type' => $type, ':ouid' => $ouid));
  return $result->fetchAssoc();
}

function ologin_get_connection($connection_id) {
  $query = "SELECT * FROM {ologin} WHERE id = :id";
  $result = db_query($query, array(':id' => $connection_id));
  return $result->fetchAssoc();
}

function ologin_bind_drupal_user($connection_id, $uid) {
  db_update('ologin')
    ->fields(array('uid' => $uid))
    ->condition('id', $connection_id)
    ->execute();
}

/**
 * oLogin configure page.
 */
function ologin_config_page() {

  $form = drupal_get_form('ologin_config_form');
  $form_output = drupal_render($form);

  return $form_output;
}


/**
 * oLogin configuration form.
 */
function ologin_config_form() {
  $form = array();

  // Weixin QR Connect
  $form['ologin_weixin'] = array(
    '#type'  => 'fieldset',
    '#title' => t('Wechat login'),
    '#collapsible' => TRUE,
  );

  $form['ologin_weixin']['ologin_weixin_callback'] = array(
    '#type' => 'textfield',
    '#title' => t('Wechat Callback URL'),
    '#default_value' => variable_get('ologin_weixin_callback', ''),
  );
  $form['ologin_weixin']['ologin_weixin_appkey'] = array(
    '#type' => 'textfield',
    '#title' => t('AppKey'),
    '#default_value' => variable_get('ologin_weixin_appkey', ''),
  );
  $form['ologin_weixin']['ologin_weixin_appsecret'] = array(
    '#type' => 'textfield',
    '#title' => t('AppSecret'),
    '#default_value' => variable_get('ologin_weixin_appsecret', ''),
  );

  return system_settings_form($form);
}
